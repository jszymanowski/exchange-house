networks:
  exchange-house-network:
    name: exchange-house-network
  external_proxy_net:
    external: true
    name: proxy_net

services:
  exchange-house:
    container_name: exchange-house
    image: ghcr.io/jszymanowski/exchange-house:latest
    environment:
      - ENV=production
      - WORKERS=4
      - HEARTBEAT_CHECK_URL=${HEARTBEAT_CHECK_URL}
      - REFRESH_COMPLETED_URL=${REFRESH_COMPLETED_URL}
      - OPEN_EXCHANGE_RATES_APP_ID=${OPEN_EXCHANGE_RATES_APP_ID}
      # TODO: move these to secrets
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-exchange_house_production}
    ports:
      - "3177:8080"
    networks:
      - exchange-house-network
      - external_proxy_net
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  postgres:
    container_name: exchange-house-postgres
    image: postgres:17
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-exchange_house_production}
    volumes:
      - ${POSTGRES_DATA_PATH:-/mnt/cache/appdata/exchange-house-postgres}:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - exchange-house-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-exchange_house_production}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
